$date
	Thu Oct  6 15:46:20 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module MUX16to1_tb $end
$var wire 1 ! f $end
$var reg 4 " s [3:0] $end
$var reg 16 # w [15:0] $end
$scope module MUX $end
$var wire 4 $ s [3:0] $end
$var wire 16 % w [0:15] $end
$var wire 4 & ft [0:3] $end
$var wire 1 ! f $end
$scope module s1 $end
$var wire 2 ' s [1:0] $end
$var wire 4 ( w [3:0] $end
$var wire 1 ) f $end
$upscope $end
$scope module s2 $end
$var wire 2 * s [1:0] $end
$var wire 4 + w [3:0] $end
$var wire 1 , f $end
$upscope $end
$scope module s3 $end
$var wire 2 - s [1:0] $end
$var wire 4 . w [3:0] $end
$var wire 1 / f $end
$upscope $end
$scope module s4 $end
$var wire 2 0 s [1:0] $end
$var wire 4 1 w [3:0] $end
$var wire 1 2 f $end
$upscope $end
$scope module s5 $end
$var wire 2 3 s [1:0] $end
$var wire 4 4 w [3:0] $end
$var wire 1 ! f $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b1 4
b0 3
12
b1 1
b0 0
0/
b0 .
b0 -
0,
b0 +
b0 *
0)
b0 (
b0 '
b1 &
b1 %
b0 $
b1 #
b0 "
1!
$end
#20
1)
b1000 &
b1000 4
02
1!
b11 '
b11 *
b11 -
b11 0
b11 3
b1000 (
b0 1
b1111 "
b1111 $
b1000000000000000 #
b1000000000000000 %
#40
b0 &
b0 4
0)
0!
b10 '
b10 *
b10 -
b10 0
b0 3
b0 (
b10 1
b10 "
b10 $
b10 #
b10 %
#60
b1 '
b1 *
b1 -
b1 0
b1 3
b100 +
b0 1
b101 "
b101 $
b10000000000 #
b10000000000 %
#80
